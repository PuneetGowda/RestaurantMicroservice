package com.puneet.restaurant.controller;

public class RestaurantControllerTest {

	 @InjectMocks
	    RestaurantController restaurantController;

	    @Mock
	    RestaurantService restaurantService;

	    @BeforeEach
	    public void setUp() {
	        MockitoAnnotations.openMocks(this); //in order for Mock and InjectMocks annotations to take effect, you need to call MockitoAnnotations.openMocks(this);
	    }

	    @Test
	    public void testFetchAllRestaurants(){
	        // Mock the service behavior
	        List<RestaurantDTO> mockRestaurants = Arrays.asList(
	                new RestaurantDTO(1, "Restaurant 1", "Address 1", "city 1", "Desc 1"),
	                new RestaurantDTO(2, "Restaurant 2", "Address 2", "city 2", "Desc 2")
	        );
	        when(restaurantService.findAllRestaurants()).thenReturn(mockRestaurants);

	        // Call the controller method
	        ResponseEntity<List<RestaurantDTO>> response = restaurantController.fetchAllRestaurants();

	        // Verify the response
	        assertEquals(HttpStatus.OK, response.getStatusCode());
	        assertEquals(mockRestaurants, response.getBody());

	        // Verify that the service method was called
	        verify(restaurantService, times(1)).findAllRestaurants();
	    }
}
